name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install system dependencies for XGBoost
        sudo apt-get update
        sudo apt-get install -y build-essential
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=api --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  train-model:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install system dependencies for XGBoost
        sudo apt-get update
        sudo apt-get install -y build-essential
        pip install -r requirements.txt
    
    - name: Download data
      run: python download_data.py
    
    - name: Train model
      run: python train.py
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: model-files
        path: model/

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [test, train-model]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download model artifacts
      uses: actions/download-artifact@v5
      with:
        name: model-files
        path: model/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image (local only)
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.api
        push: false
        tags: titanic-ml-api:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        # Add your deployment commands here
        # Example: kubectl apply -f k8s/
        # Example: docker-compose up -d 