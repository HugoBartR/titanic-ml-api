name: Manual Test

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'What to test'
        required: true
        default: 'tests'
        type: choice
        options:
        - tests
        - train
        - docker-build
        - docker-push

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.test_type == 'tests' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run tests
      run: |
        pytest tests/ -v --cov=api --cov-report=xml

  train:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.test_type == 'train' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Download data
      run: python download_data.py
    
    - name: Train model
      run: python train.py
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: model-files
        path: model/

  docker-build:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.test_type == 'docker-build' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download model artifacts
      uses: actions/download-artifact@v5
      with:
        name: model-files
        path: model/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.api
        push: false
        tags: titanic-ml-api:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

  docker-push:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.test_type == 'docker-push' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download model artifacts
      uses: actions/download-artifact@v5
      with:
        name: model-files
        path: model/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: hbart
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.api
        push: true
        tags: hbart/titanic-ml-api:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max 